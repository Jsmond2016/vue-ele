暂时完成 购物车列表部分 
# Please enter the commit message for your changes. Lines starting
# with '#' will be ignored, and an empty message aborts the commit.
# On branch master
# Your branch is up-to-date with 'origin/master'.
#
# Changes to be committed:
#	modified:   src/components/shopcart/shopcart.vue
#
# ------------------------ >8 ------------------------
# Do not touch the line above.
# Everything below will be removed.
diff --git a/src/components/shopcart/shopcart.vue b/src/components/shopcart/shopcart.vue
index f86a7bd..f021fc7 100644
--- a/src/components/shopcart/shopcart.vue
+++ b/src/components/shopcart/shopcart.vue
@@ -1,57 +1,63 @@
 <template>
-    <div class="shopcart">
-      <div class="content" @click="toggleList">
-        <div class="content-left">
-          <div class="logo-wrapper">
-            <div class="logo" :class="{'highlight': totalCount>0}">
-              <span class="icon-shopping_cart" :class="{'highlight': totalCount>0}"></span>
-            </div>
-            <div class="num" v-show="totalCount>0">{{totalCount}}</div>
-          </div>
-          <div class="price" :class="{'highlight': totalPrice>0}">￥{{totalPrice}}</div>
-          <div class="desc">另需配送费￥{{deliveryPrice}}元</div>
-        </div>
-        <div class="content-right">
-          <div class="pay" :class="payClass">
-            {{payDesc}}
-          </div>
-        </div>
-        <div class="ball-container">
-          <div v-for="(ball,index) in balls" :key="index">
-            <transition name="drop" @before-enter="beforeDrop" @enter="dropping" @after-enter="afterDrop">
-              <div class="ball" v-show="ball.show">
-                <div class="inner inner-hook"></div>
+    <div>
+      <div class="shopcart">
+        <div class="content">
+          <div class="content-left"  @click="toggleList">
+            <div class="logo-wrapper">
+              <div class="logo" :class="{'highlight': totalCount>0}">
+                <span class="icon-shopping_cart" :class="{'highlight': totalCount>0}"></span>
               </div>
-            </transition>
+              <div class="num" v-show="totalCount>0">{{totalCount}}</div>
+            </div>
+            <div class="price" :class="{'highlight': totalPrice>0}">￥{{totalPrice}}</div>
+            <div class="desc">另需配送费￥{{deliveryPrice}}元</div>
           </div>
-        </div>
-        <transition name="fold">
-          <div class="shopcart-list" v-show="listShow">
-            <div class="list-header">
-              <h1 class="title">购物车</h1>
-              <span class="empty">清空</span>
+          <div class="content-right" @click="pay">
+            <div class="pay" :class="payClass">
+              {{payDesc}}
             </div>
-            <div class="list-content">
-              <ul>
-                <li class="food" v-for="(food,index) in selectFoods" :key="index">
-                  <span class="name">{{food.name}}</span>
-                  <div class="price">
-                    <span>￥{{food.price*food.count}}</span>
-                  </div>
-                  <div class="cartcontrol-wrapper">
-                    <cartcontrol :food="food"></cartcontrol>
-                  </div>
-                </li>
-              </ul>
+          </div>
+          <div class="ball-container">
+            <div v-for="(ball,index) in balls" :key="index">
+              <transition name="drop" @before-enter="beforeDrop" @enter="dropping" @after-enter="afterDrop">
+                <div class="ball" v-show="ball.show">
+                  <div class="inner inner-hook"></div>
+                </div>
+              </transition>
             </div>
           </div>
-        </transition>
+          <transition name="fold">
+            <div class="shopcart-list" v-show="listShow">
+              <div class="list-header">
+                <h1 class="title2">购物车</h1>
+                <span class="empty" @click="empty">清空</span>
+              </div>
+              <div class="list-content" ref="listContent">
+                <ul>
+                  <li class="food" v-for="(food,index) in selectFoods" :key="index">
+                    <span class="name">{{food.name}}</span>
+                    <div class="price">
+                      <span>￥{{food.price*food.count}}</span>
+                    </div>
+                    <div class="cartcontrol-wrapper">
+                      <cartcontrol :food="food"></cartcontrol>
+                    </div>
+                  </li>
+                </ul>
+              </div>
+            </div>
+          </transition>
+        </div>
       </div>
+      <transition name="fade">
+        <div class="list-mask" @click="hideList" v-show="listShow"></div>
+      </transition>
     </div>
 </template>
 
 <script type="text/ecmascript-6">
   import cartcontrol from 'components/cartcontrol/cartcontrol'
+  import BScroll from 'better-scroll'
 
   export default {
       props: {
@@ -85,7 +91,7 @@
             {show: false}
           ],
           dropBalls: [],
-          fold: true
+          fold: false
         }
       },
       methods: {
@@ -137,11 +143,27 @@
             el.style.display = 'none'
           }
         },
-        toggleList() {
+        toggleList(event) {
+          event.preventDefault()
           if (!this.totalCount) {
             return 0
           }
           this.fold = !this.fold
+        },
+        empty() {
+          this.selectFoods.forEach((food) => {
+            food.count = 0
+            this.fold = false
+          })
+        },
+        hideList() {
+          this.fold = false
+        },
+        pay() {
+          if (this.totalPrice < this.minPrice) {
+            return 0
+          }
+          window.alert(`支付${this.totalPrice}元`)
         }
       },
 
@@ -178,19 +200,32 @@
           }
         },
         listShow: {
-          get: function() {
+          get: function () {
             return this.fold
           },
-          set: function() {
+          set: function () {
             if (!this.totalCount) {
               this.fold = true
               return false
             }
             let show = !this.fold
+            if (show) {
+              this.$nextTick(() => {
+                if (!this.scroll) {
+                  this.scroll = new BScroll(this.$refs.listContent, {
+                    click: true
+                  })
+                } else {
+                  this.scroll.refresh()
+                }
+              })
+            }
             return show
           }
+
         }
       },
+
     components: {
         cartcontrol
       }
@@ -312,13 +347,14 @@
           transform: translate3d(0, -100%, 0)
           &.fold-enter-active, &.fold-leave-active
             transform: translate3d(0, 0, 0)
+            transition: all .3s
           .list-header
             height: 40px
             line-height: 40px
             padding: 0 18px
             background: #f3f5f7
             border-bottom: 1px solid rgba(7,17,27,0.1)
-            .title
+            .title2
               float: left
               font-size: 14px
               color: rgb(7,17,27)
@@ -353,4 +389,18 @@
                 right: 0
                 bottom: 8px
 
+    .list-mask
+      position: absolute
+      top: 0
+      left: 0
+      width: 100%
+      height: 100%
+      z-index: 40
+      backdrop-filter: blur(10px)
+      opacity: 1
+      background: rgba(7,17,27,0.6)
+      transition: all 0.5s
+      &.fade-enter-active, &.fade-leave-active
+        opacity: 0
+        background: rgba(7,17,27,0)
 </style>
